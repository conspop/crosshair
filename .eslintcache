[{"/Users/Seb/Desktop/crosshair/src/index.js":"1","/Users/Seb/Desktop/crosshair/src/App.js":"2","/Users/Seb/Desktop/crosshair/src/reportWebVitals.js":"3","/Users/Seb/Desktop/crosshair/src/utils/userService.js":"4","/Users/Seb/Desktop/crosshair/src/pages/LoginPage.jsx":"5","/Users/Seb/Desktop/crosshair/src/utils/tokenService.js":"6","/Users/Seb/Desktop/crosshair/src/pages/GamesPage.jsx":"7","/Users/Seb/Desktop/crosshair/src/pages/SignupPage.jsx":"8","/Users/Seb/Desktop/crosshair/src/pages/GamePage.jsx":"9","/Users/Seb/Desktop/crosshair/src/components/Board.jsx":"10","/Users/Seb/Desktop/crosshair/src/components/Card.jsx":"11","/Users/Seb/Desktop/crosshair/src/components/Hand.jsx":"12","/Users/Seb/Desktop/crosshair/src/components/Scoreboard.jsx":"13","/Users/Seb/Desktop/crosshair/src/pages/LobbyPage.jsx":"14","/Users/Seb/Desktop/crosshair/src/components/Header.jsx":"15","/Users/Seb/Desktop/crosshair/src/pages/HowToPlayPage.jsx":"16","/Users/Seb/Desktop/crosshair/src/pages/LeaderboardPage.jsx":"17"},{"size":539,"mtime":1610985852632,"results":"18","hashOfConfig":"19"},{"size":2455,"mtime":1611610382398,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610488388300,"results":"21","hashOfConfig":"19"},{"size":1040,"mtime":1611147455647,"results":"22","hashOfConfig":"19"},{"size":1747,"mtime":1612298168881,"results":"23","hashOfConfig":"19"},{"size":756,"mtime":1610982686333,"results":"24","hashOfConfig":"19"},{"size":3025,"mtime":1612298816686,"results":"25","hashOfConfig":"19"},{"size":2122,"mtime":1612298203193,"results":"26","hashOfConfig":"19"},{"size":6112,"mtime":1612212776353,"results":"27","hashOfConfig":"19"},{"size":3007,"mtime":1611180334927,"results":"28","hashOfConfig":"19"},{"size":1060,"mtime":1611180095559,"results":"29","hashOfConfig":"19"},{"size":487,"mtime":1611499941992,"results":"30","hashOfConfig":"19"},{"size":2055,"mtime":1611667719091,"results":"31","hashOfConfig":"19"},{"size":3953,"mtime":1612298999178,"results":"32","hashOfConfig":"19"},{"size":910,"mtime":1612383322612,"results":"33","hashOfConfig":"19"},{"size":1994,"mtime":1611667701447,"results":"34","hashOfConfig":"19"},{"size":1341,"mtime":1612299375040,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"y49hl1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Seb/Desktop/crosshair/src/index.js",[],["74","75"],"/Users/Seb/Desktop/crosshair/src/App.js",[],"/Users/Seb/Desktop/crosshair/src/reportWebVitals.js",[],"/Users/Seb/Desktop/crosshair/src/utils/userService.js",[],"/Users/Seb/Desktop/crosshair/src/pages/LoginPage.jsx",[],"/Users/Seb/Desktop/crosshair/src/utils/tokenService.js",[],"/Users/Seb/Desktop/crosshair/src/pages/GamesPage.jsx",["76"],"import React, { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport tokenService from '../utils/tokenService'\nimport './GamesPage.css'\n\nexport default function Games({user}) {\n  const [games, setGames] = useState('')\n\n  const refresh = useCallback(() => {\n    axios.get('/api/games', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      }\n    }).then(response => setGames(response.data))\n  },[])\n\n  // refresh when component renders for the first time  \n  useEffect(() => {\n    refresh()\n  },[refresh])\n\n  useEffect(() => {\n    let vh = window.innerHeight * 0.01\n    let appContainerEl = document.querySelector('.app-container')\n    appContainerEl.style.setProperty('--vh', `${vh}px`)\n\n    window.addEventListener('resize', () => {\n      let resizedVh = window.innerHeight * 0.01\n      appContainerEl.style.setProperty('--vh', `${resizedVh}px`)\n    })\n  },[])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refresh()\n    }, 3000)\n    return () => clearInterval(interval)\n  })\n\n  return (\n    <div>\n      {games ? <GamesList games={games} user={user} /> : ''}\n    </div>\n  )\n}\n\nfunction GamesList({games, user}) {\n  return (\n    <div className='games-list-container'>\n      <h2>Your Turn</h2>\n      <table>\n        {games.filter(game => (game.scoreboard === null) && (!game.resign) && (user.username === game.playerOneName) === game.turn)\n        .map(game => <GamesListItem game={game} user={user} />)}\n      </table>\n      <h2>Their Turn</h2>\n      <table>\n        {games.filter(game => (game.scoreboard === null) && (!game.resign) && (user.username === game.playerOneName) !== game.turn)\n        .map(game => <GamesListItem game={game} user={user} />)}\n      </table>\n      <h2>Completed</h2>\n      <table>\n        {games.filter(game => (game.scoreboard !== null) || (game.resign)).reverse()\n        .map(game => <GamesListItem game={game} user={user} />)}\n      </table>\n    </div>\n  )\n}\n\nfunction GamesListItem({game, user}) {\n  return (\n    <tr>\n      <td><Opponent game={game} user={user} /></td>\n      <td><GameLink game={game} user={user} /></td>\n    </tr>\n  )\n}\n\nfunction Opponent({game, user}) {\n  const {playerOneName, playerTwoName} = game\n  const opponent = playerOneName === user.username ? playerTwoName : playerOneName\n  \n  return (\n    <>\n      {opponent}\n    </>\n  )\n}\n\nfunction Status({game, user}) {\n  const {playerOneName, playerTwoName, board, turn} = game\n  const player = playerOneName === user.username ? true : false\n  const opponent = playerOneName === user.username ? playerTwoName : playerOneName\n\n  if (!board.includes('')) {\n    return 'Complete'\n  } else {\n    if (player === turn) {\n      return 'Your Turn'\n    } else {\n      return `Their Turn`\n    }\n  }\n}\n\nfunction GameLink({game, user}) {\n  return (\n    <Link\n      to={`/games/${game._id}`}\n      key={game._id}\n    ><Status game={game} user={user} />\n    </Link>\n  )\n}","/Users/Seb/Desktop/crosshair/src/pages/SignupPage.jsx",[],"/Users/Seb/Desktop/crosshair/src/pages/GamePage.jsx",["77"],"import React, { useState, useEffect, useCallback } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport tokenService from '../utils/tokenService'\nimport './GamePage.css'\nimport Board from '../components/Board'\nimport Hand from '../components/Hand'\nimport Scoreboard from '../components/Scoreboard'\n\nexport default function GamePage({user, logout}) {\n  const {gameId} = useParams()\n  const [id, setId] = useState('')\n  const [board, setBoard] = useState(Array(25).fill(''))\n  const [player, setPlayer] = useState('')\n  const [hand, setHand] = useState(Array(12).fill(''))\n  const [opponent, setOpponent] = useState('')\n  const [turn, setTurn] = useState('')\n  const [scoreboard, setScoreboard] = useState('')\n  const [selected, setSelected] = useState('')\n  const [lastPlayed, setLastPlayed] = useState('')\n  const [resign, setResign] = useState('')\n\n  const refresh = useCallback(() => {\n    axios.get(`/api/games/${gameId}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      }\n    })\n    .then(response => {\n      const dataPlayer = response.data.game.playerOneName === user.username ? true : false\n      setId(response.data.game._id)\n      setBoard(response.data.game.board)\n      setPlayer(dataPlayer)\n      setHand(dataPlayer ? response.data.game.playerOneHand : response.data.game.playerTwoHand)\n      setOpponent(dataPlayer ? response.data.game.playerTwoName : response.data.game.playerOneName)\n      setTurn(response.data.game.turn)\n      setScoreboard(response.data.game.scoreboard)\n      setLastPlayed(response.data.game.lastPlayed)\n      setResign(response.data.game.resign)\n      if (response.data.version !== user.version) {\n        axios.post('/api/games/updateVersion', {token: tokenService.getToken()})\n        .then(() => {\n          window.location.reload()\n          logout()\n        })\n        .catch(error => {console.log(error.message)})\n      }\n    })\n    .catch(() => console.log('Something went wrong!'))\n  },[gameId, user.username])\n\n  // get game data when component first loads\n  useEffect(() => {\n    refresh()\n  },[refresh])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (player !== turn) {\n        refresh()\n      }\n    }, 1000)\n    return () => clearInterval(interval)\n  })\n\n  useEffect(() => {\n    let vh = window.innerHeight * 0.01\n    let appContainerEl = document.querySelector('.app-container')\n    appContainerEl.style.setProperty('--vh', `${vh}px`)\n\n    window.addEventListener('resize', () => {\n      let resizedVh = window.innerHeight * 0.01\n      appContainerEl.style.setProperty('--vh', `${resizedVh}px`)\n    })\n  },[])\n\n  const handleSelect = (event) => {\n    const index = parseInt(event.currentTarget.dataset.index)\n    if (player === turn) {\n      if (selected === index) {\n        setSelected('')\n      } else {\n        setSelected(parseInt(index))\n      }\n    }\n  }\n\n  const handlePlayCard = (event) => {\n    const index = parseInt(event.currentTarget.dataset.index)\n    if (board[index] === '') {\n      if (selected || selected === 0) {\n        // remove card from hand\n        const oldHand = [...hand]\n        const newHand = [...hand]\n        const playedCard = newHand.splice(selected,1)\n        setHand(newHand)\n  \n        // add card to board\n        const oldBoard = [...board]\n        const newBoard = [...board]\n        newBoard[index] = playedCard[0]\n        setBoard(newBoard)\n        \n        setTurn(turn => !turn)\n        setSelected('')\n        setLastPlayed(index)\n  \n        const updateObject = {\n          token: tokenService.getToken(),\n          id,\n          [player ? 'playerOneHand' : 'playerTwoHand']: newHand,\n          board: newBoard,\n          lastPlayed: index\n        }\n  \n        axios.put('/api/games', updateObject)\n        .then(() => {console.log('Updated game!')})\n        .catch(() => {\n          console.log('Something went wrong!')\n          setHand(oldHand)\n          setBoard(oldBoard)\n          setTurn(turn => !turn)\n          setLastPlayed('')\n        })\n      }\n    }\n  }\n\n  const handleResignGame = () => {\n\n    setResign(user.username)\n\n    const updateObject = {\n      token: tokenService.getToken(),\n      id,\n      resign: user.username,\n      opponent: opponent\n    }\n\n    axios.put('/api/games/resign', updateObject)\n    .then(() => {console.log('Resigned!')})\n    .catch(() => {\n      console.log('Something went wrong!')\n      setResign('')\n    })\n  }\n\n  const cardsPlayed = board.filter(card => card !== '').length\n\n  return (\n    <>\n      <div className='game-container'>\n        <div className='opponent-and-turn'>\n          {scoreboard || resign ? '' : <Turn player={player} turn={turn} opponent={opponent} />}\n          <p>vs. {opponent}</p>\n          {cardsPlayed > 11 && !scoreboard && !resign ? <ResignButton handleResignGame={handleResignGame} /> : undefined}\n        </div>\n        <Board board={board} player={player} handlePlayCard={handlePlayCard} lastPlayed={lastPlayed} />\n        {scoreboard ? <Scoreboard scoreboard={scoreboard} player={player} user={user} opponent={opponent} /> : ''}\n        {resign ? <h2>{resign} resigned</h2> : ''}\n        {!scoreboard && !resign ? <Hand hand={hand} selected={selected} handleSelect={handleSelect} /> : ''}\n      </div>\n    </>\n  )\n\n}\n\nfunction Turn({player, turn, opponent}) {\n  if (player === turn) {\n    return <div className='turn'>Your Turn</div>\n  } else {\n    return <div className='turn'>{opponent}'s Turn</div>\n  }\n}\n\nfunction ResignButton({handleResignGame}) {\n  const [showResign, setShowResign] = useState(true)\n  const [areYouSure, setAreYouSure] = useState(false)\n\n  const handleResign = () => {\n    setAreYouSure(true)\n    setTimeout(() => {setAreYouSure(false)}, 1000)\n  }\n\n  const handleConfirmResign = () => {\n    handleResignGame()\n    setShowResign(false)\n  }\n\n  if (showResign) {\n    if (areYouSure) {\n      return <button onClick={handleConfirmResign}>Are you sure?</button>\n    } else {\n      return <button onClick={handleResign}>Resign</button>\n    }\n  } else {\n    return ''\n  }\n  \n}","/Users/Seb/Desktop/crosshair/src/components/Board.jsx",[],"/Users/Seb/Desktop/crosshair/src/components/Card.jsx",[],"/Users/Seb/Desktop/crosshair/src/components/Hand.jsx",[],"/Users/Seb/Desktop/crosshair/src/components/Scoreboard.jsx",[],"/Users/Seb/Desktop/crosshair/src/pages/LobbyPage.jsx",[],"/Users/Seb/Desktop/crosshair/src/components/Header.jsx",[],"/Users/Seb/Desktop/crosshair/src/pages/HowToPlayPage.jsx",["78"],"import React, { useEffect } from 'react'\nimport './HowToPlayPage.css'\n\nexport default function HowToPlayPage() {\n\n  useEffect(() => {\n    let vh = window.innerHeight * 0.01\n    let appContainerEl = document.querySelector('.app-container')\n    appContainerEl.style.setProperty('--vh', `${vh}px`)\n\n    window.addEventListener('resize', () => {\n      let resizedVh = window.innerHeight * 0.01\n      appContainerEl.style.setProperty('--vh', `${resizedVh}px`)\n    })\n  },[])\n\n  return (\n    <div className='how-to-play-container'>\n      <h2>How to Play Crosshair</h2>\n        <ol>\n          <li>The game is played with a deck of cards that has 2 through 7 removed.</li>\n          <li>You and your opponent are each dealt 12 cards.</li>\n          <li>The board is a 5x5 grid and the game begins with a card placed in the middle of the grid.</li>\n          <li>You and your opponent will take turns adding a card to an open spot on the grid.</li>\n          <li>You are building 5 poker hands. If you need a reminder, <a href='https://en.wikipedia.org/wiki/List_of_poker_hands' target='_blank'>here are the hands.</a></li>\n          <li>Your hands are the vertical columns. Your opponents hands are the horizontal rows.This means that you share one card in each hand. This is signified by colour in the game.</li>\n          <li>Once all 25 spots are filled, the player who wins 3 or more of the hands is the winner of the game.</li>\n        </ol>\n      <h2>How to Use this App</h2>\n        <ol>\n          <li>To get started, create an account by choosing Sign Up.</li>\n          <li>If you want to create a new game, choose Create Game in the Lobby.</li>\n          <li>You can join a game that someone else has created (if there is one) by choosing Join Game.</li>\n          <li>You can view the list of games you're currently playing and enter those games by choosing Your Games.</li>\n          <li>You'll join the leaderboard when you've completed your first game!</li>\n        </ol>\n    </div>\n  )\n}","/Users/Seb/Desktop/crosshair/src/pages/LeaderboardPage.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":94,"column":9,"nodeType":"85","messageId":"86","endLine":94,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":51,"column":5,"nodeType":"89","endLine":51,"endColumn":28,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":25,"column":71,"nodeType":"93","endLine":25,"endColumn":147},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'opponent' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'logout' and 'user.version'. Either include them or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["96"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [gameId, logout, user.username, user.version]",{"range":"99","text":"100"},[2051,2074],"[gameId, logout, user.username, user.version]"]